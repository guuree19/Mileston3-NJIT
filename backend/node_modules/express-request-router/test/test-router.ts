import * as express from 'express';
import * as bodyParser from 'body-parser';
import TestOptions from './test-options';

const router = express.Router();
router.use(bodyParser.json());
router.use(bodyParser.text());

// На любой GET-запрос отвечает строкой указанной в TestOptions.GET_ANSWER
router.get('/', (req, res, next) => {
	res.setHeader('Content-Type', 'text/plain');
	res.end(TestOptions.GET_ANSWER);
});

// На любой POST-запрос отвечает строкой указанной в TestOptions.POST_ANSWER
router.post('/', (req, res, next) => {
	res.setHeader('Content-Type', 'text/plain');
	res.end(TestOptions.POST_ANSWER);
});

// На GET-запрос к /ping отвечает JSON-объектом с полями headers и body.
// headers - заголовки, которые пришли в запросе.
// body - тело запроса, которое и пришло.
// ip - с которого пришел запрос
router.get('/ping', (req, res, next) => {
	res.json({
		headers: req.headers,
		body: req.body,
		ip: req.ip
	});
});

// На GET-запрос к /some-headers, устанавливает HTTP-заголовок
// some-header в значение some-value и возвращает ответ "answer".
router.get('/some-headers', (req, res, next) => {
	res.setHeader('some-header', 'some-value');
	res.end('answer');
});

// На GET-запрос к /status-code-404, устанавливает код ответа 404.
router.get('/status-code-404', (req, res, next) => {
	res.status(404);
	res.end('Not Found');
});

export default router;